2025-01-25 01:28:44,086 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:28:44,089 - INFO - ` Date : January 25, 2025 01:28 AM `
2025-01-25 01:28:44,090 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:28:45,002 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:28:45,002 - INFO - ` Date : January 25, 2025 01:28 AM `
2025-01-25 01:28:45,003 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:30:14,044 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:30:14,046 - INFO - ` Date : January 25, 2025 01:30 AM `
2025-01-25 01:30:14,047 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:30:17,012 - INFO - Adding contact via API response body: ( '{
  "_id": "6793ce28a3b1ca001363e3a2",
  "firstName": "Rey",
  "lastName": "Fahey",
  "birthdate": "1982/05/17",
  "email": "catalina.emard@yahoo.com",
  "phone": "8706073",
  "street1": "73133 Sherlene Tunnel",
  "street2": "Suite 838",
  "city": "Metzstad",
  "stateProvince": "Kansas",
  "postalCode": "27152",
  "country": "Equatorial Guinea",
  "owner": "6793a75a013e8b0013775293",
  "__v": 0.0
}' ).
2025-01-25 01:30:17,026 - INFO - Actual response code to: ( '201' ), Expected response code: ( '201' ).
2025-01-25 01:30:17,038 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:30:17,039 - INFO - ` Date : January 25, 2025 01:30 AM `
2025-01-25 01:30:17,040 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:30:18,393 - INFO - Adding contact via API response body: ( '{
  "_id": "6793ce2aa3b1ca001363e3a3",
  "firstName": "Ma",
  "lastName": "Leuschke",
  "birthdate": "1983/01/08",
  "email": "anne.robel@yahoo.com",
  "phone": "2426790",
  "street1": "816 Reynaldo Court",
  "street2": "Suite 848",
  "city": "North Linwoodhaven",
  "stateProvince": "California",
  "postalCode": "44600-5075",
  "country": "Uganda",
  "owner": "6793a75a013e8b0013775293",
  "__v": 0.0
}' ).
2025-01-25 01:30:19,624 - INFO - Adding contact via API response body: ( '{
  "errors": {
    "firstName": {
      "name": "ValidatorError",
      "message": "Path `firstName` is required.",
      "properties": {
        "message": "Path `firstName` is required.",
        "type": "required",
        "path": "firstName",
        "value": ""
      },
      "kind": "required",
      "path": "firstName",
      "value": ""
    }
  },
  "_message": "Contact validation failed",
  "message": "Contact validation failed: firstName: Path `firstName` is required."
}' ).
2025-01-25 01:30:19,626 - INFO - Actual response code to: ( '400' ), Expected response code: ( '400' ).
2025-01-25 01:34:13,258 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:34:13,261 - INFO - ` Date : January 25, 2025 01:34 AM `
2025-01-25 01:34:13,261 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:34:15,967 - INFO - Adding contact via API response body: ( '{
  "_id": "6793cf17a3b1ca001363e3a5",
  "firstName": "Jame",
  "lastName": "Mann",
  "birthdate": "1975/02/03",
  "email": "brain.howell@yahoo.com",
  "phone": "7549212",
  "street1": "608 Antione Lane",
  "street2": "Apt. 862",
  "city": "Gradyville",
  "stateProvince": "Louisiana",
  "postalCode": "50509-2985",
  "country": "Mauritius",
  "owner": "6793a75a013e8b0013775293",
  "__v": 0.0
}' ).
2025-01-25 01:34:17,231 - INFO - Adding contact via API response body: ( '{
  "errors": {
    "firstName": {
      "name": "ValidatorError",
      "message": "Path `firstName` is required.",
      "properties": {
        "message": "Path `firstName` is required.",
        "type": "required",
        "path": "firstName",
        "value": ""
      },
      "kind": "required",
      "path": "firstName",
      "value": ""
    }
  },
  "_message": "Contact validation failed",
  "message": "Contact validation failed: firstName: Path `firstName` is required."
}' ).
2025-01-25 01:34:17,233 - INFO - Actual response code to: ( '400' ), Expected response code: ( '400' ).
2025-01-25 01:34:17,244 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:34:17,244 - INFO - ` Date : January 25, 2025 01:34 AM `
2025-01-25 01:34:17,245 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:34:18,491 - INFO - Adding contact via API response body: ( '{
  "_id": "6793cf1aa3b1ca001363e3a7",
  "firstName": "Lenard",
  "lastName": "Crist",
  "birthdate": "1966/08/13",
  "email": "chasity.ondricka@hotmail.com",
  "phone": "8543734",
  "street1": "47854 Labadie Center",
  "street2": "Suite 725",
  "city": "Derrickborough",
  "stateProvince": "Louisiana",
  "postalCode": "98692",
  "country": "Kenya",
  "owner": "6793a75a013e8b0013775293",
  "__v": 0.0
}' ).
2025-01-25 01:34:18,497 - INFO - Actual response code to: ( '201' ), Expected response code: ( '201' ).
2025-01-25 01:42:36,271 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:42:36,275 - INFO - ` Date : January 25, 2025 01:42 AM `
2025-01-25 01:42:36,275 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:42:42,070 - INFO - Adding contact via API response body: ( '{
  "_id": "6793d111a3b1ca001363e3ac",
  "firstName": "James",
  "lastName": "Willms",
  "birthdate": "1969/03/06",
  "email": "gia.mitchell@hotmail.com",
  "phone": "7713315",
  "street1": "8853 Gutkowski Forge",
  "street2": "Suite 209",
  "city": "Welchtown",
  "stateProvince": "Rhode Isla",
  "postalCode": "36770-2737",
  "country": "French Guiana",
  "owner": "6793a75a013e8b0013775293",
  "__v": 0.0
}' ).
2025-01-25 01:42:43,423 - INFO - Update contact via API response body: ( '{
  "errors": {
    "birthdate": {
      "name": "ValidatorError",
      "message": "Birthdate is invalid",
      "properties": {
        "message": "Birthdate is invalid",
        "type": "user defined",
        "path": "birthdate",
        "value": "",
        "reason": {}
      },
      "kind": "user defined",
      "path": "birthdate",
      "value": "",
      "reason": {}
    }
  },
  "_message": "Contact validation failed",
  "message": "Contact validation failed: birthdate: Birthdate is invalid"
}' ).
2025-01-25 01:42:43,432 - SEVERE - Verification error occured. Actual response code to: ( '400' ), Expected response code: ( '200' ).
2025-01-25 01:42:43,451 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:42:43,451 - INFO - ` Date : January 25, 2025 01:42 AM `
2025-01-25 01:42:43,452 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:42:44,886 - INFO - Update contact via API response body: ( '{
  "errors": {
    "birthdate": {
      "name": "ValidatorError",
      "message": "Birthdate is invalid",
      "properties": {
        "message": "Birthdate is invalid",
        "type": "user defined",
        "path": "birthdate",
        "value": "",
        "reason": {}
      },
      "kind": "user defined",
      "path": "birthdate",
      "value": "",
      "reason": {}
    }
  },
  "_message": "Contact validation failed",
  "message": "Contact validation failed: birthdate: Birthdate is invalid"
}' ).
2025-01-25 01:44:36,892 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:44:36,895 - INFO - ` Date : January 25, 2025 01:44 AM `
2025-01-25 01:44:36,895 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:44:39,475 - INFO - Update contact via API response body: ( '{
  "errors": {
    "birthdate": {
      "name": "ValidatorError",
      "message": "Birthdate is invalid",
      "properties": {
        "message": "Birthdate is invalid",
        "type": "user defined",
        "path": "birthdate",
        "value": "",
        "reason": {}
      },
      "kind": "user defined",
      "path": "birthdate",
      "value": "",
      "reason": {}
    }
  },
  "_message": "Contact validation failed",
  "message": "Contact validation failed: birthdate: Birthdate is invalid"
}' ).
2025-01-25 01:44:39,487 - SEVERE - Verification error occured. Actual response code to: ( '400' ), Expected response code: ( '200' ).
2025-01-25 01:44:39,502 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:44:39,503 - INFO - ` Date : January 25, 2025 01:44 AM `
2025-01-25 01:44:39,504 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:44:40,731 - INFO - Update contact via API response body: ( '{
  "errors": {
    "birthdate": {
      "name": "ValidatorError",
      "message": "Birthdate is invalid",
      "properties": {
        "message": "Birthdate is invalid",
        "type": "user defined",
        "path": "birthdate",
        "value": "",
        "reason": {}
      },
      "kind": "user defined",
      "path": "birthdate",
      "value": "",
      "reason": {}
    }
  },
  "_message": "Contact validation failed",
  "message": "Contact validation failed: birthdate: Birthdate is invalid"
}' ).
2025-01-25 01:45:24,598 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:45:24,601 - INFO - ` Date : January 25, 2025 01:45 AM `
2025-01-25 01:45:24,601 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:45:27,432 - INFO - Update contact via API response body: ( '{
  "errors": {
    "birthdate": {
      "name": "ValidatorError",
      "message": "Birthdate is invalid",
      "properties": {
        "message": "Birthdate is invalid",
        "type": "user defined",
        "path": "birthdate",
        "value": "",
        "reason": {}
      },
      "kind": "user defined",
      "path": "birthdate",
      "value": "",
      "reason": {}
    }
  },
  "_message": "Contact validation failed",
  "message": "Contact validation failed: birthdate: Birthdate is invalid"
}' ).
2025-01-25 01:45:27,442 - SEVERE - Verification error occured. Actual response code to: ( '400' ), Expected response code: ( '200' ).
2025-01-25 01:45:27,459 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:45:27,461 - INFO - ` Date : January 25, 2025 01:45 AM `
2025-01-25 01:45:27,461 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:45:28,852 - INFO - Update contact via API response body: ( '{
  "errors": {
    "birthdate": {
      "name": "ValidatorError",
      "message": "Birthdate is invalid",
      "properties": {
        "message": "Birthdate is invalid",
        "type": "user defined",
        "path": "birthdate",
        "value": "",
        "reason": {}
      },
      "kind": "user defined",
      "path": "birthdate",
      "value": "",
      "reason": {}
    }
  },
  "_message": "Contact validation failed",
  "message": "Contact validation failed: birthdate: Birthdate is invalid"
}' ).
2025-01-25 01:47:30,409 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:47:30,413 - INFO - ` Date : January 25, 2025 01:47 AM `
2025-01-25 01:47:30,414 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:47:33,143 - INFO - Update contact via API response body: ( '{
  "errors": {
    "birthdate": {
      "name": "ValidatorError",
      "message": "Birthdate is invalid",
      "properties": {
        "message": "Birthdate is invalid",
        "type": "user defined",
        "path": "birthdate",
        "value": "",
        "reason": {}
      },
      "kind": "user defined",
      "path": "birthdate",
      "value": "",
      "reason": {}
    }
  },
  "_message": "Contact validation failed",
  "message": "Contact validation failed: birthdate: Birthdate is invalid"
}' ).
2025-01-25 01:47:33,161 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 01:47:33,162 - INFO - ` Date : January 25, 2025 01:47 AM `
2025-01-25 01:47:33,162 - INFO - ````````````````````````````````````````````````````
2025-01-25 01:47:34,525 - INFO - Update contact via API response body: ( '{
  "errors": {
    "birthdate": {
      "name": "ValidatorError",
      "message": "Birthdate is invalid",
      "properties": {
        "message": "Birthdate is invalid",
        "type": "user defined",
        "path": "birthdate",
        "value": "",
        "reason": {}
      },
      "kind": "user defined",
      "path": "birthdate",
      "value": "",
      "reason": {}
    }
  },
  "_message": "Contact validation failed",
  "message": "Contact validation failed: birthdate: Birthdate is invalid"
}' ).
2025-01-25 02:05:34,807 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:05:34,816 - INFO - ` Date : January 25, 2025 02:05 AM `
2025-01-25 02:05:34,817 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:05:40,383 - INFO - Adding contact via API response body: ( '{
  "_id": "6793d674013e8b00137752fa",
  "firstName": "Angel",
  "lastName": "Stanton",
  "birthdate": "1965/12/17",
  "email": "benton.sanford@hotmail.com",
  "phone": "1968123",
  "street1": "0427 Davis Island",
  "street2": "Apt. 280",
  "city": "Asiachester",
  "stateProvince": "Iowa",
  "postalCode": "02698-5195",
  "country": "Bahrain",
  "owner": "6793a75a013e8b0013775293",
  "__v": 0.0
}' ).
2025-01-25 02:05:41,684 - INFO - Adding contact via API response body: ( '{
  "errors": {
    "firstName": {
      "name": "ValidatorError",
      "message": "Path `firstName` is required.",
      "properties": {
        "message": "Path `firstName` is required.",
        "type": "required",
        "path": "firstName",
        "value": ""
      },
      "kind": "required",
      "path": "firstName",
      "value": ""
    }
  },
  "_message": "Contact validation failed",
  "message": "Contact validation failed: firstName: Path `firstName` is required."
}' ).
2025-01-25 02:05:41,686 - INFO - Actual response code to: ( '400' ), Expected response code: ( '400' ).
2025-01-25 02:05:41,701 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:05:41,701 - INFO - ` Date : January 25, 2025 02:05 AM `
2025-01-25 02:05:41,702 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:05:42,979 - INFO - Adding contact via API response body: ( '{
  "_id": "6793d676013e8b00137752fb",
  "firstName": "Ellis",
  "lastName": "Zulauf",
  "birthdate": "2000/07/25",
  "email": "errol.kuhn@hotmail.com",
  "phone": "0673233",
  "street1": "403 Wehner Park",
  "street2": "Apt. 115",
  "city": "Gorczanyport",
  "stateProvince": "Nevada",
  "postalCode": "79670-8097",
  "country": "Peru",
  "owner": "6793a75a013e8b0013775293",
  "__v": 0.0
}' ).
2025-01-25 02:05:42,987 - INFO - Actual response code to: ( '201' ), Expected response code: ( '201' ).
2025-01-25 02:05:42,999 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:05:42,999 - INFO - ` Date : January 25, 2025 02:05 AM `
2025-01-25 02:05:43,000 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:05:44,331 - INFO - Adding contact via API response body: ( '{
  "_id": "6793d678013e8b00137752fc",
  "firstName": "Ronald",
  "lastName": "Gleason",
  "birthdate": "1986/05/27",
  "email": "freddy.kulas@hotmail.com",
  "phone": "3404735",
  "street1": "82461 Hahn Forest",
  "street2": "Suite 518",
  "city": "Adinamouth",
  "stateProvince": "New Hampsh",
  "postalCode": "64602-1805",
  "country": "Norway",
  "owner": "6793a75a013e8b0013775293",
  "__v": 0.0
}' ).
2025-01-25 02:05:45,579 - INFO - Deleting contact via API response body: ( '6793d678013e8b00137752fc' ).
2025-01-25 02:05:45,601 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:05:45,601 - INFO - ` Date : January 25, 2025 02:05 AM `
2025-01-25 02:05:45,601 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:05:46,926 - INFO - Login via API response body: ( 'null' ).
2025-01-25 02:05:46,930 - SEVERE - Verification error occured. Actual response code to: ( '401' ), Expected response code: ( '200' ).
2025-01-25 02:05:46,954 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:05:46,955 - INFO - ` Date : January 25, 2025 02:05 AM `
2025-01-25 02:05:46,955 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:05:48,222 - INFO - Login via API response body: ( 'null' ).
2025-01-25 02:05:49,553 - INFO - Login via API response body: ( 'null' ).
2025-01-25 02:05:49,554 - INFO - Actual response code to: ( '401' ), Expected response code: ( '401' ).
2025-01-25 02:05:49,562 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:05:49,563 - INFO - ` Date : January 25, 2025 02:05 AM `
2025-01-25 02:05:49,563 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:05:50,870 - INFO - Create user via API response body: ( '{
  "user": {
    "_id": "6793d67ea3b1ca001363e3b4",
    "firstName": "Rona",
    "lastName": "Feeney",
    "email": "benjamin.ohara@yahoo.com",
    "__v": 1.0
  },
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NzkzZDY3ZWEzYjFjYTAwMTM2M2UzYjQiLCJpYXQiOjE3Mzc3NDE5NTB9.TPfE5_MnK1QTMc2CM6bhlWNzpP7KDvVlUCEmgXSpCOY"
}' ).
2025-01-25 02:05:50,875 - INFO - Actual response code to: ( '201' ), Expected response code: ( '201' ).
2025-01-25 02:05:50,883 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:05:50,884 - INFO - ` Date : January 25, 2025 02:05 AM `
2025-01-25 02:05:50,884 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:05:52,177 - INFO - Create user via API response body: ( '{
  "user": {
    "_id": "6793d680a3b1ca001363e3b6",
    "firstName": "Carmen",
    "lastName": "Labadie",
    "email": "buford.osinski@gmail.com",
    "__v": 1.0
  },
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NzkzZDY4MGEzYjFjYTAwMTM2M2UzYjYiLCJpYXQiOjE3Mzc3NDE5NTJ9._gElFc-dJvF9sHZX9PtcZNbzAe1haNM3JChag4dwr9U"
}' ).
2025-01-25 02:05:53,491 - INFO - Create user via API response body: ( '{
  "user": {
    "_id": "6793d681a3b1ca001363e3b8",
    "firstName": "Used",
    "lastName": "Email",
    "email": "sander@gmail.com",
    "__v": 1.0
  },
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NzkzZDY4MWEzYjFjYTAwMTM2M2UzYjgiLCJpYXQiOjE3Mzc3NDE5NTN9.VP76-vZZPOBRqwUL_MxPb75vC520pnaCUE4naZSBQSY"
}' ).
2025-01-25 02:05:53,491 - SEVERE - Verification error occured. Actual response code to: ( '201' ), Expected response code: ( '400' ).
2025-01-25 02:05:53,502 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:05:53,502 - INFO - ` Date : January 25, 2025 02:05 AM `
2025-01-25 02:05:53,502 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:05:57,881 - INFO - Element located by ( 'By.id: email' ) is visible within the timeout period.
2025-01-25 02:05:58,344 - INFO - Entering the text value 'sander@gmail.com' into the element located by ( 'By.id: email' ).
2025-01-25 02:05:58,465 - INFO - Element located by ( 'By.id: password' ) is visible within the timeout period.
2025-01-25 02:05:58,611 - INFO - Entering the text value '1234567' into the element located by ( 'By.id: password' ).
2025-01-25 02:05:58,725 - INFO - Element located by ( 'By.id: submit' ) is visible within the timeout period.
2025-01-25 02:05:58,905 - INFO - Clicking the element identified by ( 'By.id: submit' ) successful.
2025-01-25 02:06:09,361 - SEVERE - Timeout occurred: Element located by ( 'By.xpath: //tr[1]//td[2]' ) is not visible within the specified timeout.
2025-01-25 02:06:09,716 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:06:09,717 - INFO - ` Date : January 25, 2025 02:06 AM `
2025-01-25 02:06:09,717 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:06:12,086 - INFO - Element located by ( 'By.id: email' ) is visible within the timeout period.
2025-01-25 02:06:12,343 - INFO - Entering the text value 'sander@gmail.com' into the element located by ( 'By.id: email' ).
2025-01-25 02:06:12,502 - INFO - Element located by ( 'By.id: password' ) is visible within the timeout period.
2025-01-25 02:06:12,739 - INFO - Entering the text value '1234567' into the element located by ( 'By.id: password' ).
2025-01-25 02:06:12,914 - INFO - Element located by ( 'By.id: submit' ) is visible within the timeout period.
2025-01-25 02:06:13,118 - INFO - Clicking the element identified by ( 'By.id: submit' ) successful.
2025-01-25 02:06:23,615 - SEVERE - Timeout occurred: Element located by ( 'By.xpath: //tr[1]//td[2]' ) is not visible within the specified timeout.
2025-01-25 02:06:23,938 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:06:23,939 - INFO - ` Date : January 25, 2025 02:06 AM `
2025-01-25 02:06:23,939 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:06:26,430 - INFO - Element located by ( 'By.id: email' ) is visible within the timeout period.
2025-01-25 02:06:26,689 - INFO - Entering the text value 'sander@gmail.com' into the element located by ( 'By.id: email' ).
2025-01-25 02:06:26,876 - INFO - Element located by ( 'By.id: password' ) is visible within the timeout period.
2025-01-25 02:06:27,098 - INFO - Entering the text value '1234567' into the element located by ( 'By.id: password' ).
2025-01-25 02:06:27,306 - INFO - Element located by ( 'By.id: submit' ) is visible within the timeout period.
2025-01-25 02:06:27,476 - INFO - Clicking the element identified by ( 'By.id: submit' ) successful.
2025-01-25 02:06:38,564 - SEVERE - Timeout occurred: Element located by ( 'By.xpath: //tr[1]//td[2]' ) is not visible within the specified timeout.
2025-01-25 02:06:39,141 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:06:39,142 - INFO - ` Date : January 25, 2025 02:06 AM `
2025-01-25 02:06:39,142 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:06:41,744 - INFO - Element located by ( 'By.id: email' ) is visible within the timeout period.
2025-01-25 02:06:42,330 - INFO - Entering the text value 'sander@gmail.com' into the element located by ( 'By.id: email' ).
2025-01-25 02:06:42,622 - INFO - Element located by ( 'By.id: password' ) is visible within the timeout period.
2025-01-25 02:06:42,999 - INFO - Entering the text value '1234567' into the element located by ( 'By.id: password' ).
2025-01-25 02:06:43,280 - INFO - Element located by ( 'By.id: submit' ) is visible within the timeout period.
2025-01-25 02:06:43,639 - INFO - Clicking the element identified by ( 'By.id: submit' ) successful.
2025-01-25 02:06:54,301 - SEVERE - Timeout occurred: Element located by ( 'By.id: add-contact' ) is not visible within the specified timeout.
2025-01-25 02:06:54,791 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:06:54,791 - INFO - ` Date : January 25, 2025 02:06 AM `
2025-01-25 02:06:54,795 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:06:57,449 - INFO - Element located by ( 'By.id: email' ) is visible within the timeout period.
2025-01-25 02:06:57,878 - INFO - Entering the text value 'sander@gmail.com' into the element located by ( 'By.id: email' ).
2025-01-25 02:06:58,181 - INFO - Element located by ( 'By.id: password' ) is visible within the timeout period.
2025-01-25 02:06:58,581 - INFO - Entering the text value '1234567' into the element located by ( 'By.id: password' ).
2025-01-25 02:06:58,842 - INFO - Element located by ( 'By.id: submit' ) is visible within the timeout period.
2025-01-25 02:06:59,251 - INFO - Clicking the element identified by ( 'By.id: submit' ) successful.
2025-01-25 02:07:09,939 - SEVERE - Timeout occurred: Element located by ( 'By.id: add-contact' ) is not visible within the specified timeout.
2025-01-25 02:07:10,427 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:07:10,427 - INFO - ` Date : January 25, 2025 02:07 AM `
2025-01-25 02:07:10,427 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:07:13,115 - INFO - Element located by ( 'By.id: email' ) is visible within the timeout period.
2025-01-25 02:07:13,532 - INFO - Entering the text value 'sander@gmail.com' into the element located by ( 'By.id: email' ).
2025-01-25 02:07:13,806 - INFO - Element located by ( 'By.id: password' ) is visible within the timeout period.
2025-01-25 02:07:14,209 - INFO - Entering the text value '1234567' into the element located by ( 'By.id: password' ).
2025-01-25 02:07:14,617 - INFO - Element located by ( 'By.id: submit' ) is visible within the timeout period.
2025-01-25 02:07:15,029 - INFO - Clicking the element identified by ( 'By.id: submit' ) successful.
2025-01-25 02:07:25,604 - SEVERE - Timeout occurred: Element located by ( 'By.cssSelector: .main-content header h1' ) is not visible within the specified timeout.
2025-01-25 02:07:26,106 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:07:26,113 - INFO - ` Date : January 25, 2025 02:07 AM `
2025-01-25 02:07:26,113 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:07:28,644 - INFO - Element located by ( 'By.id: email' ) is visible within the timeout period.
2025-01-25 02:07:29,051 - INFO - Entering the text value 'johanna.haag@hotmail.com' into the element located by ( 'By.id: email' ).
2025-01-25 02:07:29,317 - INFO - Element located by ( 'By.id: password' ) is visible within the timeout period.
2025-01-25 02:07:29,706 - INFO - Entering the text value 'ej5owcwz5859g' into the element located by ( 'By.id: password' ).
2025-01-25 02:07:29,960 - INFO - Element located by ( 'By.id: submit' ) is visible within the timeout period.
2025-01-25 02:07:30,278 - INFO - Clicking the element identified by ( 'By.id: submit' ) successful.
2025-01-25 02:07:30,692 - INFO - Element located by ( 'By.id: error' ) is visible within the timeout period.
2025-01-25 02:07:30,872 - INFO - Element located by ( 'By.id: error' ) is visible within the timeout period.
2025-01-25 02:07:30,971 - INFO - The actual value of the attribute is: ( 'Incorrect username or password' ).
2025-01-25 02:07:31,070 - INFO - Assertion passed. Actual value: ( 'Incorrect username or password' ), Expected value: ( 'Incorrect username or password' ).
2025-01-25 02:07:31,590 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:07:31,591 - INFO - ` Date : January 25, 2025 02:07 AM `
2025-01-25 02:07:31,591 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:07:34,101 - INFO - Element located by ( 'By.id: signup' ) is visible within the timeout period.
2025-01-25 02:07:35,024 - INFO - Clicking the element identified by ( 'By.id: signup' ) successful.
2025-01-25 02:07:35,313 - INFO - Element located by ( 'By.id: firstName' ) is visible within the timeout period.
2025-01-25 02:07:35,543 - INFO - Entering the text value 'Maybelle' into the element located by ( 'By.id: firstName' ).
2025-01-25 02:07:35,690 - INFO - Element located by ( 'By.id: lastName' ) is visible within the timeout period.
2025-01-25 02:07:35,877 - INFO - Entering the text value 'Goyette' into the element located by ( 'By.id: lastName' ).
2025-01-25 02:07:36,018 - INFO - Element located by ( 'By.id: email' ) is visible within the timeout period.
2025-01-25 02:07:36,337 - INFO - Entering the text value 'del.sanford@hotmail.com' into the element located by ( 'By.id: email' ).
2025-01-25 02:07:36,456 - INFO - Element located by ( 'By.id: password' ) is visible within the timeout period.
2025-01-25 02:07:36,683 - INFO - Entering the text value 'teg1zlqio1' into the element located by ( 'By.id: password' ).
2025-01-25 02:07:36,979 - INFO - Element located by ( 'By.id: submit' ) is visible within the timeout period.
2025-01-25 02:07:37,184 - INFO - Clicking the element identified by ( 'By.id: submit' ) successful.
2025-01-25 02:07:38,766 - INFO - Element located by ( 'By.cssSelector: .main-content header h1' ) is visible within the timeout period.
2025-01-25 02:07:38,896 - INFO - Element located by ( 'By.cssSelector: .main-content header h1' ) is visible within the timeout period.
2025-01-25 02:07:39,021 - INFO - The actual value of the attribute is: ( 'Contact List' ).
2025-01-25 02:07:39,109 - INFO - Assertion passed. Actual value: ( 'Contact List' ), Expected value: ( 'Contact List' ).
2025-01-25 02:07:39,573 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:07:39,574 - INFO - ` Date : January 25, 2025 02:07 AM `
2025-01-25 02:07:39,574 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:07:41,953 - INFO - Element located by ( 'By.id: signup' ) is visible within the timeout period.
2025-01-25 02:07:42,752 - INFO - Clicking the element identified by ( 'By.id: signup' ) successful.
2025-01-25 02:07:43,026 - INFO - Element located by ( 'By.id: firstName' ) is visible within the timeout period.
2025-01-25 02:07:43,303 - INFO - Entering the text value 'InvalidFirstName' into the element located by ( 'By.id: firstName' ).
2025-01-25 02:07:43,437 - INFO - Element located by ( 'By.id: lastName' ) is visible within the timeout period.
2025-01-25 02:07:43,698 - INFO - Entering the text value 'InvalidLastName' into the element located by ( 'By.id: lastName' ).
2025-01-25 02:07:43,827 - INFO - Element located by ( 'By.id: email' ) is visible within the timeout period.
2025-01-25 02:07:44,114 - INFO - Entering the text value 'sander@gmail.com' into the element located by ( 'By.id: email' ).
2025-01-25 02:07:44,233 - INFO - Element located by ( 'By.id: password' ) is visible within the timeout period.
2025-01-25 02:07:44,435 - INFO - Entering the text value '1234567' into the element located by ( 'By.id: password' ).
2025-01-25 02:07:44,741 - INFO - Element located by ( 'By.id: submit' ) is visible within the timeout period.
2025-01-25 02:07:44,973 - INFO - Clicking the element identified by ( 'By.id: submit' ) successful.
2025-01-25 02:07:46,269 - INFO - Element located by ( 'By.cssSelector: #error' ) is visible within the timeout period.
2025-01-25 02:07:46,382 - INFO - Element located by ( 'By.cssSelector: #error' ) is visible within the timeout period.
2025-01-25 02:07:46,484 - INFO - The actual value of the attribute is: ( 'Email address is already in use' ).
2025-01-25 02:07:46,573 - INFO - Assertion passed. Actual value: ( 'Email address is already in use' ), Expected value: ( 'Email address is already in use' ).
2025-01-25 02:09:32,280 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:09:32,284 - INFO - ` Date : January 25, 2025 02:09 AM `
2025-01-25 02:09:32,285 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:09:35,617 - INFO - Create user via API response body: ( '{
  "user": {
    "_id": "6793d75fa3b1ca001363e3c1",
    "firstName": "Darcel",
    "lastName": "Wolf",
    "email": "tameika.hegmann@hotmail.com",
    "__v": 1.0
  },
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NzkzZDc1ZmEzYjFjYTAwMTM2M2UzYzEiLCJpYXQiOjE3Mzc3NDIxNzV9.gIbv1czla7pv2mCa7XEatxq5DAwqu9C4Bt0E7FU1VvE"
}' ).
2025-01-25 02:09:35,636 - INFO - Actual response code to: ( '201' ), Expected response code: ( '201' ).
2025-01-25 02:09:35,652 - INFO - ````````````````` Start of Test ````````````````````
2025-01-25 02:09:35,654 - INFO - ` Date : January 25, 2025 02:09 AM `
2025-01-25 02:09:35,655 - INFO - ````````````````````````````````````````````````````
2025-01-25 02:09:36,949 - INFO - Create user via API response body: ( '{
  "user": {
    "_id": "6793d760013e8b0013775302",
    "firstName": "Kristy",
    "lastName": "Schmeler",
    "email": "stevie.kris@hotmail.com",
    "__v": 1.0
  },
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NzkzZDc2MDAxM2U4YjAwMTM3NzUzMDIiLCJpYXQiOjE3Mzc3NDIxNzZ9.uT1ZTWTQzAV5w-8eivh6KM-cZ9timB3FQ1uOgWH1xOY"
}' ).
2025-01-25 02:09:38,345 - INFO - Create user via API response body: ( '{
  "message": "Email address is already in use"
}' ).
2025-01-25 02:09:38,346 - INFO - Actual response code to: ( '400' ), Expected response code: ( '400' ).
